<?php
session_start();
include('/var/www/html/db_connect.php'); // Ensure this file connects to your database correctly
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// Check if the user is logged in and has a valid club_id
if (!isset($_SESSION['club_id'])) {
    header('Location: login.php'); // Redirect to login if not logged in
    exit;
}

// Get session variables
$club_id = $_SESSION['club_id'];
$branch_id = $_SESSION['branch_id'];
$updateType = isset($_GET['update_type']) ? $_GET['update_type'] : 'events';

// Handle form submissions
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    if (isset($_POST['add_event'])) {
        $title = $_POST['event_title'];
        $description = $_POST['event_description'];

        // Prepare and execute SQL statement to insert event
        $stmt = $conn->prepare("INSERT INTO events (title, description, club_id) VALUES (?, ?, ?)");
        if ($stmt === false) {
            error_log("Prepare failed: " . $conn->error);
        }
        $stmt->bind_param("ssi", $title, $description, $club_id);
        if (!$stmt->execute()) {
            error_log("Execute failed: " . $stmt->error);
            $_SESSION['message'] = "Error adding event.";
        } else {
            $_SESSION['message'] = "Event added successfully.";
        }
        $stmt->close();
    } elseif (isset($_POST['add_recruitment'])) {
        $role = $_POST['role'];
        $description = $_POST['recruitment_description'];
        $deadline = $_POST['deadline'];

        // Prepare and execute SQL statement to insert recruitment
        $stmt = $conn->prepare("INSERT INTO recruitments (role, description, deadline, club_id) VALUES (?, ?, ?, ?)");
        if ($stmt === false) {
            error_log("Prepare failed: " . $conn->error);
        }
        $stmt->bind_param("sssi", $role, $description, $deadline, $club_id);
        if (!$stmt->execute()) {
            error_log("Execute failed: " . $stmt->error);
            $_SESSION['message'] = "Error adding recruitment.";
        } else {
            $_SESSION['message'] = "Recruitment added successfully.";
        }
        $stmt->close();
    } elseif (isset($_POST['delete_event'])) {
        $event_id = $_POST['event_id'];

        // Prepare and execute SQL statement to delete event
        $stmt = $conn->prepare("DELETE FROM events WHERE id = ? AND club_id = ?");
        if ($stmt === false) {
            error_log("Prepare failed: " . $conn->error);
        }
        $stmt->bind_param("ii", $event_id, $club_id);
        if (!$stmt->execute()) {
            error_log("Execute failed: " . $stmt->error);
            $_SESSION['message'] = "Error deleting event.";
        } else {
            $_SESSION['message'] = "Event deleted successfully.";
        }
        $stmt->close();
    } elseif (isset($_POST['delete_recruitment'])) {
        $recruitment_id = $_POST['recruitment_id'];

        // Prepare and execute SQL statement to delete recruitment
        $stmt = $conn->prepare("DELETE FROM recruitments WHERE id = ? AND club_id = ?");
        if ($stmt === false) {
            error_log("Prepare failed: " . $conn->error);
        }
        $stmt->bind_param("ii", $recruitment_id, $club_id);
        if (!$stmt->execute()) {
            error_log("Execute failed: " . $stmt->error);
            $_SESSION['message'] = "Error deleting recruitment.";
        } else {
            $_SESSION['message'] = "Recruitment deleted successfully.";
        }
        $stmt->close();
    }
}

// Fetch events and recruitments for the logged-in club
$eventsResult = $conn->prepare("SELECT * FROM events WHERE club_id = ?");
$recruitmentsResult = $conn->prepare("SELECT * FROM recruitments WHERE club_id = ?");

if ($eventsResult) {
    $eventsResult->bind_param("i", $club_id);
    $eventsResult->execute();
    $eventsResult = $eventsResult->get_result();
}

if ($recruitmentsResult) {
    $recruitmentsResult->bind_param("i", $club_id);
    $recruitmentsResult->execute();
    $recruitmentsResult = $recruitmentsResult->get_result();
}

// Fetch applications for the logged-in club
$applicationsResult = $conn->prepare("SELECT s.name as student_name, s.email as email, a.resume_path as resume_path FROM applications a INNER JOIN students s ON a.student_id = s.id WHERE a.club_id = ?");
if ($applicationsResult) {
    $applicationsResult->bind_param("i", $club_id);
    $applicationsResult->execute();
    $applicationsResult = $applicationsResult->get_result();
}

// Close the database connection
$conn->close();
?>
